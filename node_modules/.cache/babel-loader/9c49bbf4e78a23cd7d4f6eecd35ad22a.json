{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Spice_Blue\\\\gitSPice\\\\src\\\\components\\\\Form\\\\AddEditForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { Form, Button, Col, Row } from 'react-bootstrap';\nimport { postData, updateData, deleteData } from '../../store/Action/FormCrud';\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEditForm = props => {\n  _s();\n\n  // const task= useSelector(state => state.FormCrudReducer.data);\n  const dispatch = useDispatch();\n  const [description, setDescription] = useState('');\n  const [id, setId] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [assignedTo, setAssignedTo] = useState('');\n\n  if (props.detectOps === \"edit\") {\n    console.log('working as expected');\n    console.log(props);\n    setDescription(props.data.description);\n    setId(props.data.id);\n    setDate(new Date(props.data.date).toLocaleDateString('fr-CA'));\n    setTime(props.data.time);\n    setAssignedTo(props.data.assignedTo);\n  } else if (props.detectOps == \"add\") {\n    setDescription(\"Hooks Follow up\");\n    setId('');\n    setDate(new Date().toLocaleDateString('fr-CA'));\n    setTime('00:00');\n    setAssignedTo('Vetri');\n  } //used to find whether add or update operation is going to be performed\n\n\n  useEffect(() => {// if(props.detectOps === \"edit\")\n    // {\n    //                 console.log('working as expected')  \n    //                 console.log(props)        \n    //                 setDescription(props.data.description);\n    //                 setId(props.data.id);\n    //                 setDate(new Date(props.data.date).toLocaleDateString('fr-CA'))\n    //                 setTime(props.data.time)\n    //                 setAssignedTo(props.data.assignedTo)\t\t\t\t\t\t                                      \n    // } \n    // else if(props.detectOps == \"add\")\n    //  {\n    //     setDescription(\"Hooks Follow up\");\n    //     setId('');\n    //     setDate(new Date().toLocaleDateString('fr-CA'))\n    //     setTime('00:00')\n    //     setAssignedTo('Vetri')\t\n    //  }\n  }, []); //used to find whether add or update operation is going to be performed\n  //send data to post or put call depending on the ID\n\n  const submit = e => {\n    e.preventDefault();\n    var hms = time; // your input string\n\n    var a = hms.split(':'); // split it at the colons\t\t\t\t\n\n    var seconds = +a[0] * 60 * 60 + +a[1] * 60;\n    const params = {\n      task_msg: description,\n      task_date: date,\n      task_time: seconds,\n      is_completed: 1,\n      assigned_user: assignedTo,\n      time_zone: -330\n    };\n\n    if (id === '') {\n      //props.postData(params);\t\n      dispatch(postData(params));\n      setTimeout(() => {\n        props.updateCompo();\n        props.close();\n      }, 1000);\n    } else {\n      dispatch(updateData(params, id)); //this.props.updateData(params, id);\n\n      setTimeout(() => {\n        props.updateCompo();\n        props.close();\n      }, 1000);\n    }\n  }; //send data to post or put call depending on the ID\n  //delete task\n\n\n  const del = () => {\n    const deleteId = id;\n\n    if (deleteId) {\n      dispatch(deleteData(id));\n      setTimeout(() => {\n        props.updateCompo();\n        props.close();\n      }, 1000);\n    }\n  }; //delete task\n\n\n  const onChangeHandler = event => {\n    // event.preventDefault();\n    console.log(event.target.value);\n    console.log(event.target.name);\n    console.log(event);\n    setDescription(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          xs: 12,\n          sm: 12,\n          md: 12,\n          lg: 12,\n          xl: 12,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Task Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Description\",\n            onChange: e => onChangeHandler(e),\n            value: description //defaultValue={description}\n            ,\n            name: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"acount-filled\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          xs: 6,\n          sm: 6,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"date\",\n            onChange: e => setDate(e.target.value),\n            placeholder: \"date\",\n            value: date,\n            name: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          xs: 6,\n          sm: 6,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"time\",\n            onChange: e => setTime(e.target.value),\n            placeholder: \"time\",\n            value: time,\n            name: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"acount-filled\",\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          xs: 12,\n          sm: 12,\n          md: 12,\n          lg: 12,\n          xl: 12,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Assign User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            onChange: e => setAssignedTo(e.target.value),\n            placeholder: \"Assign User\",\n            value: assignedTo,\n            name: \"assignedTo\",\n            defaultValue: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          sm: 1,\n          lg: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          sm: 4,\n          lg: 4,\n          children: id === '' ? \"\" : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-trash-o\",\n              \"aria-hidden\": \"true\",\n              onClick: del\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          sm: 1,\n          lg: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-secondary\",\n            type: \"button\",\n            onClick: props.close,\n            className: \"formBtn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 9\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            className: \"formBtn\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEditForm, \"ui1aNOdJAckMzq061ebJsIsNTNQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddEditForm;\nexport default AddEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditForm\");","map":{"version":3,"sources":["C:/React/Spice_Blue/gitSPice/src/components/Form/AddEditForm.jsx"],"names":["React","Component","useState","useEffect","Form","Button","Col","Row","postData","updateData","deleteData","useDispatch","AddEditForm","props","dispatch","description","setDescription","id","setId","date","setDate","time","setTime","assignedTo","setAssignedTo","detectOps","console","log","data","Date","toLocaleDateString","submit","e","preventDefault","hms","a","split","seconds","params","task_msg","task_date","task_time","is_completed","assigned_user","time_zone","setTimeout","updateCompo","close","del","deleteId","onChangeHandler","event","target","value","name"],"mappings":"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","sourcesContent":["import React, { Component,useState,useEffect } from 'react';\r\nimport {  Form, Button, Col, Row } from 'react-bootstrap';\r\nimport {  postData, updateData,deleteData } from '../../store/Action/FormCrud';\r\nimport { useDispatch} from \"react-redux\";\r\n\r\nconst AddEditForm =(props)=>{\t\r\n    // const task= useSelector(state => state.FormCrudReducer.data);\r\nconst dispatch = useDispatch();    \r\nconst [description,setDescription]=useState('')\r\nconst [id,setId]=useState('');\r\nconst [date,setDate]=useState('');\r\nconst[time,setTime]=useState('');\r\nconst[assignedTo,setAssignedTo]=useState('')\r\n\r\nif(props.detectOps === \"edit\")\r\n    {\r\n                    console.log('working as expected')  \r\n                    console.log(props)        \r\n                                                                     \r\n                    setDescription(props.data.description);\r\n                    setId(props.data.id);\r\n                    setDate(new Date(props.data.date).toLocaleDateString('fr-CA'))\r\n                    setTime(props.data.time)\r\n                    setAssignedTo(props.data.assignedTo)\t\t\t\t\t\t                                      \r\n    } \r\n    else if(props.detectOps == \"add\")\r\n     {\r\n        setDescription(\"Hooks Follow up\");\r\n        setId('');\r\n        setDate(new Date().toLocaleDateString('fr-CA'))\r\n        setTime('00:00')\r\n        setAssignedTo('Vetri')\t\r\n     }\r\n//used to find whether add or update operation is going to be performed\r\nuseEffect(() => {\r\n    // if(props.detectOps === \"edit\")\r\n    // {\r\n    //                 console.log('working as expected')  \r\n    //                 console.log(props)        \r\n                                                                     \r\n    //                 setDescription(props.data.description);\r\n    //                 setId(props.data.id);\r\n    //                 setDate(new Date(props.data.date).toLocaleDateString('fr-CA'))\r\n    //                 setTime(props.data.time)\r\n    //                 setAssignedTo(props.data.assignedTo)\t\t\t\t\t\t                                      \r\n    // } \r\n    // else if(props.detectOps == \"add\")\r\n    //  {\r\n    //     setDescription(\"Hooks Follow up\");\r\n    //     setId('');\r\n    //     setDate(new Date().toLocaleDateString('fr-CA'))\r\n    //     setTime('00:00')\r\n    //     setAssignedTo('Vetri')\t\r\n    //  }\r\n},[])\r\n//used to find whether add or update operation is going to be performed\r\n\r\n\r\n//send data to post or put call depending on the ID\r\nconst submit = (e) => {\r\n\t\t\t\r\n    e.preventDefault();\r\n    \r\n    var hms = time;   // your input string\r\n    var a = hms.split(':'); // split it at the colons\t\t\t\t\r\n    var seconds = (+a[0]) * 60 * 60 + (+a[1]) * 60 ;\r\n    const params = {\t\t\t\t\r\n        task_msg:description,\r\n        task_date:date,\r\n        task_time: seconds,\r\n        is_completed:1,\t\t\r\n        assigned_user:assignedTo,\r\n        time_zone:-330\r\n    }\r\n    \r\n    if (id === '') {\t\t\r\n            \r\n    //props.postData(params);\t\r\n    dispatch(postData(params))\r\n    \r\n    \r\n    setTimeout(() => {\r\n        props.updateCompo();    \r\n        props.close();\t\r\n    }, 1000);\r\n    \r\n    \r\n\r\n    } else {\r\n        dispatch(updateData(params, id))\r\n            //this.props.updateData(params, id);\r\n              \r\n            setTimeout(() => {\r\n                props.updateCompo();  \r\n                props.close();\t     \r\n            }, 1000);\r\n            \r\n    \r\n\r\n    }\r\n\r\n};\r\n//send data to post or put call depending on the ID\r\n\r\n//delete task\r\nconst del =()=> {\r\n    const deleteId=id \r\n\r\n    if (deleteId) {\r\n        dispatch(deleteData(id))\r\n        \r\n        setTimeout(() => {\r\n            props.updateCompo();   \r\n            props.close();\t \r\n        }, 1000);\r\n    }\r\n\r\n}\r\n\r\n//delete task\r\n\r\nconst onChangeHandler = event => {\r\n  // event.preventDefault();\r\n    console.log(event.target.value)\r\n    console.log(event.target.name)\r\n    console.log(event)\r\n    setDescription(event.target.value)\r\n    \r\n        \r\n    \r\n  }\r\n\r\n\r\nreturn(\r\n    <div>\r\n          <Form  onSubmit={submit}>\r\n\r\n<Form.Row>\r\n    <Form.Group as={Col} xs={12} sm={12} md={12} lg={12} xl={12} >\r\n        <Form.Label>Task Description</Form.Label>\r\n        <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Description\"                                    \r\n            onChange={(e)=>onChangeHandler(e)}\r\n            value={description}\r\n            //defaultValue={description}\r\n            name=\"description\"\r\n        />\r\n    </Form.Group>\r\n</Form.Row>\r\n\r\n<Form.Row className=\"acount-filled\">\r\n    <Form.Group as={Col} xs={6} sm={6} md={6} lg={6} xl={6} >\r\n        <Form.Label>Date</Form.Label>\r\n        <Form.Control\r\n            required\r\n            type=\"date\"            \r\n            onChange={e => setDate(e.target.value)}\r\n            placeholder=\"date\"\r\n            value={date}\r\n            name=\"date\"\r\n\r\n        />\r\n    </Form.Group>\r\n    <Form.Group as={Col} xs={6} sm={6} md={6} lg={6} xl={6} >\r\n        <Form.Label>Time</Form.Label>\r\n        <Form.Control\r\n\r\n            type=\"time\"\r\n            \r\n            onChange={e => setTime(e.target.value)}\r\n            placeholder=\"time\"\r\n            value={time}\r\n            name=\"time\"\r\n\r\n\r\n        />\r\n    </Form.Group>\r\n</Form.Row>\r\n<Form.Row className=\"acount-filled\">\r\n    <Form.Group as={Col} xs={12} sm={12} md={12} lg={12} xl={12} >\r\n        <Form.Label>Assign User</Form.Label>\r\n        <Form.Control\r\n            required\r\n            type=\"text\"            \r\n            onChange={e => setAssignedTo(e.target.value)}\r\n            placeholder=\"Assign User\"\r\n            value={assignedTo}\r\n            name=\"assignedTo\"\r\n            defaultValue=\"\"\r\n\r\n        />\r\n    </Form.Group>\r\n</Form.Row>\r\n<Row>\r\n    <Col md={1} sm={1} lg={1}>\r\n    </Col>\r\n    <Col md={4} sm={4}lg={4}>\r\n        {id === '' ? \r\n        \"\"\r\n        :<h4>\r\n            \r\n            <i class=\"fa fa-trash-o\" aria-hidden=\"true\" onClick={del }></i>\r\n        </h4>\r\n        }\r\n        \r\n    </Col>\r\n    <Col md={1} sm={1} lg={1}>\r\n    </Col>\r\n    <Col md={6} sm={6}>\r\n        <Button variant=\"outline-secondary\"  type=\"button\" onClick={props.close} className=\"formBtn\" >\r\n            Cancel\r\n          </Button>\r\n         &nbsp;\r\n        <Button variant=\"success\" type=\"submit\" className=\"formBtn\">\r\n           Save\r\n          </Button>\r\n        \r\n        \r\n        \r\n    </Col>\r\n</Row>\r\n</Form>\r\n    </div>\r\n)\r\n\r\n\r\n\r\n}\r\nexport default AddEditForm\r\n"]},"metadata":{},"sourceType":"module"}