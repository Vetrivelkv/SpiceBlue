{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Spice_Blue\\\\gitSPice\\\\src\\\\components\\\\Form\\\\AddEditForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport { postData, updateData, deleteData } from \"../../store/Action/FormCrud\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEditForm = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [description, setDescription] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [assignedTo, setAssignedTo] = useState(\"\"); //used to find whether add or update operation is going to be performed\n\n  useEffect(() => {\n    if (props.detectOps === \"edit\") {\n      setDescription(props.data.description);\n      setId(props.data.id);\n      setDate(new Date(props.data.date).toLocaleDateString(\"fr-CA\"));\n      setTime(props.data.time);\n      setAssignedTo(props.data.assignedTo);\n    } else if (props.detectOps == \"add\") {\n      setDescription(\"Hooks Follow up\");\n      setId(\"\");\n      setDate(new Date().toLocaleDateString(\"fr-CA\"));\n      setTime(\"00:00\");\n      setAssignedTo(\"Vetri\");\n    }\n  }, [props]); //used to find whether add or update operation is going to be performed\n  //send data to post or put call depending on the ID\n\n  const submit = e => {\n    e.preventDefault();\n    var hms = time; // your input string\n\n    var a = hms.split(\":\"); // split it at the colons\n\n    var seconds = +a[0] * 60 * 60 + +a[1] * 60;\n    const params = {\n      task_msg: description,\n      task_date: date,\n      task_time: seconds,\n      is_completed: 1,\n      assigned_user: assignedTo,\n      time_zone: -330\n    };\n\n    if (id === \"\") {\n      dispatch(postData(params));\n      setTimeout(() => {\n        props.updateCompo();\n        props.close();\n      }, 2000);\n    } else {\n      dispatch(updateData(params, id));\n      setTimeout(() => {\n        props.updateCompo();\n        props.close();\n      }, 2000);\n    }\n  }; //send data to post or put call depending on the ID\n  //delete task\n\n\n  const del = () => {\n    const deleteId = id;\n\n    if (deleteId) {\n      dispatch(deleteData(id));\n      setTimeout(() => {\n        props.updateCompo();\n        props.close();\n      }, 1000);\n    }\n  }; //delete task\n\n\n  const onChangeHandler = event => {\n    setDescription(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          xs: 12,\n          sm: 12,\n          md: 12,\n          lg: 12,\n          xl: 12,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Task Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Description\",\n            onChange: e => onChangeHandler(e),\n            value: description //defaultValue={description}\n            ,\n            name: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"acount-filled\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          xs: 6,\n          sm: 6,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"date\",\n            onChange: e => setDate(e.target.value),\n            placeholder: \"date\",\n            value: date,\n            name: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          xs: 6,\n          sm: 6,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"time\",\n            onChange: e => setTime(e.target.value),\n            placeholder: \"time\",\n            value: time,\n            name: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"acount-filled\",\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          xs: 12,\n          sm: 12,\n          md: 12,\n          lg: 12,\n          xl: 12,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Assign User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            onChange: e => setAssignedTo(e.target.value),\n            placeholder: \"Assign User\",\n            value: assignedTo,\n            name: \"assignedTo\",\n            defaultValue: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          sm: 1,\n          lg: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          sm: 4,\n          lg: 4,\n          children: id === \"\" ? \"\" : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-trash-o\",\n              \"aria-hidden\": \"true\",\n              onClick: del\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          sm: 1,\n          lg: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-secondary\",\n            type: \"button\",\n            onClick: props.close,\n            className: \"formBtn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            className: \"formBtn\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEditForm, \"VIe4dCKEfJ6lvgpxqH0eT7/yy0E=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddEditForm;\nexport default AddEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditForm\");","map":{"version":3,"sources":["C:/React/Spice_Blue/gitSPice/src/components/Form/AddEditForm.jsx"],"names":["React","useState","useEffect","Form","Button","Col","Row","postData","updateData","deleteData","useDispatch","AddEditForm","props","dispatch","description","setDescription","id","setId","date","setDate","time","setTime","assignedTo","setAssignedTo","detectOps","data","Date","toLocaleDateString","submit","e","preventDefault","hms","a","split","seconds","params","task_msg","task_date","task_time","is_completed","assigned_user","time_zone","setTimeout","updateCompo","close","del","deleteId","onChangeHandler","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { postData, updateData, deleteData } from \"../../store/Action/FormCrud\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst AddEditForm = (props) => {  \r\n  const dispatch = useDispatch();\r\n  const [description, setDescription] = useState(\"\");\r\n  const [id, setId] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n  const [assignedTo, setAssignedTo] = useState(\"\");\r\n\r\n  //used to find whether add or update operation is going to be performed\r\n  useEffect(() => {\r\n    if (props.detectOps === \"edit\") {\r\n      \r\n      setDescription(props.data.description);\r\n      setId(props.data.id);\r\n      setDate(new Date(props.data.date).toLocaleDateString(\"fr-CA\"));\r\n      setTime(props.data.time);\r\n      setAssignedTo(props.data.assignedTo);\r\n    } else if (props.detectOps == \"add\") {\r\n      setDescription(\"Hooks Follow up\");\r\n      setId(\"\");\r\n      setDate(new Date().toLocaleDateString(\"fr-CA\"));\r\n      setTime(\"00:00\");\r\n      setAssignedTo(\"Vetri\");\r\n    }\r\n  }, [props]);\r\n  //used to find whether add or update operation is going to be performed\r\n\r\n  //send data to post or put call depending on the ID\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    var hms = time; // your input string\r\n    var a = hms.split(\":\"); // split it at the colons\r\n    var seconds = +a[0] * 60 * 60 + +a[1] * 60;\r\n    const params = {\r\n      task_msg: description,\r\n      task_date: date,\r\n      task_time: seconds,\r\n      is_completed: 1,\r\n      assigned_user: assignedTo,\r\n      time_zone: -330,\r\n    };\r\n\r\n    if (id === \"\") {      \r\n      dispatch(postData(params));\r\n      setTimeout(() => {\r\n        props.updateCompo();\r\n        props.close();\r\n      }, 2000);\r\n    } else {\r\n      dispatch(updateData(params, id));      \r\n      setTimeout(() => {\r\n        props.updateCompo();\r\n        props.close();\r\n      }, 2000);\r\n    }\r\n  };\r\n  //send data to post or put call depending on the ID\r\n\r\n  //delete task\r\n  const del = () => {\r\n    const deleteId = id;\r\n\r\n    if (deleteId) {\r\n      dispatch(deleteData(id));\r\n\r\n      setTimeout(() => {\r\n        props.updateCompo();\r\n        props.close();\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  //delete task\r\n\r\n  const onChangeHandler = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={submit}>\r\n        <Form.Row>\r\n          <Form.Group as={Col} xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <Form.Label>Task Description</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              onChange={(e) => onChangeHandler(e)}\r\n              value={description}\r\n              //defaultValue={description}\r\n              name=\"description\"\r\n            />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row className=\"acount-filled\">\r\n          <Form.Group as={Col} xs={6} sm={6} md={6} lg={6} xl={6}>\r\n            <Form.Label>Date</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"date\"\r\n              onChange={(e) => setDate(e.target.value)}\r\n              placeholder=\"date\"\r\n              value={date}\r\n              name=\"date\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col} xs={6} sm={6} md={6} lg={6} xl={6}>\r\n            <Form.Label>Time</Form.Label>\r\n            <Form.Control\r\n              type=\"time\"\r\n              onChange={(e) => setTime(e.target.value)}\r\n              placeholder=\"time\"\r\n              value={time}\r\n              name=\"time\"\r\n            />\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row className=\"acount-filled\">\r\n          <Form.Group as={Col} xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <Form.Label>Assign User</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              onChange={(e) => setAssignedTo(e.target.value)}\r\n              placeholder=\"Assign User\"\r\n              value={assignedTo}\r\n              name=\"assignedTo\"\r\n              defaultValue=\"\"\r\n            />\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Row>\r\n          <Col md={1} sm={1} lg={1}></Col>\r\n          <Col md={4} sm={4} lg={4}>\r\n            {id === \"\" ? (\r\n              \"\"\r\n            ) : (\r\n              <h4>\r\n                <i class=\"fa fa-trash-o\" aria-hidden=\"true\" onClick={del}></i>\r\n              </h4>\r\n            )}\r\n          </Col>\r\n          <Col md={1} sm={1} lg={1}></Col>\r\n          <Col md={6} sm={6}>\r\n            <Button\r\n              variant=\"outline-secondary\"\r\n              type=\"button\"\r\n              onClick={props.close}\r\n              className=\"formBtn\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            &nbsp;\r\n            <Button variant=\"success\" type=\"submit\" className=\"formBtn\">\r\n              Save\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default AddEditForm;\r\n"]},"metadata":{},"sourceType":"module"}