{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Spice_Blue\\\\gitSPice\\\\src\\\\components\\\\Form\\\\FormCrud.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { Container, Card, ListGroup, Col, Row } from 'react-bootstrap';\nimport { getData, postData, updateData } from '../../store/Action/FormCrud';\nimport './Form.css';\nimport API from '../../API/Api';\nimport AddEditForm from './AddEditForm';\nimport Header from '../Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormCrud = () => {\n  _s();\n\n  const task = useSelector(state => state.FormCrudReducer.data);\n  const dispatch = useDispatch();\n  const [description, setDescription] = useState('');\n  const [id, setId] = useState('');\n  const [date, setDate] = useState(new Date().toLocaleDateString('fr-CA'));\n  const [time, setTime] = useState('00:00');\n  const [assignedTo, setAssignedTo] = useState('');\n  const [hide, setHide] = useState(true);\n  const [listTask, setListTask] = useState([]);\n  const [formOps, setformOps] = useState('');\n  const [result, setResult] = useState('');\n  useEffect(() => {\n    const token = JSON.parse(localStorage.getItem('token'));\n    axios.interceptors.request.use(function (config) {\n      config.headers.common['Authorization'] = 'Bearer ' + token;\n      config.headers.common['Accept'] = 'application/json';\n      config.headers.common['Content-Type'] = 'application/json';\n      return config;\n    });\n    dispatch(getData());\n    console.log(task);\n    setListTask(task);\n  }, [dispatch]);\n\n  const convertTime = data => {\n    let time = Number(data);\n    let hrs = Math.floor(time / 3600);\n    let min = Math.floor(time % 3600 / 60);\n    return ('0' + hrs).slice(-2) + \":\" + ('0' + min).slice(-2);\n  };\n\n  const closeForm = () => {\n    setHide(true);\n    setId('');\n  };\n\n  const displayForm = () => {\n    setHide(false);\n    setformOps('add');\n  };\n\n  edit = i => {\n    this.setState({\n      id: i.id\n    });\n\n    if (i.id) {\n      axios.get(`${API.baseUrl}/task/lead_04412ba1d622466cab1f0ad941fcf303/${i.id}`).then(response => response.data).then(result => {\n        console.log(result);\n        this.setState({\n          result: result\n        });\n        setResult(result);\n        setDescription(result.results.task_msg);\n        setId(result.results.id);\n        setDate(new Date(result.results.task_date).toLocaleDateString('fr-CA'));\n        setTime(convertTime(result.results.task_time));\n        setAssignedTo(result.results.assigned_user);\n        setHide(false);\n        setformOps('edit');\n        description = result.results.task_msg, id = result.results.id, date = new Date(result.results.task_date).toLocaleDateString('fr-CA'), time = this.convertTime(result.results.task_time), assignedTo = result.results.assigned_user, hide = false, formOps = 'edit';\n      }, err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"formHead\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '28rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: [\"TASKS \", listTask.length ? listTask.length : 0, /*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: displayForm,\n                  href: true,\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"float-right hover \",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-plus-circle\",\n                      \"aria-hidden\": \"true\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 9\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 8\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 8\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                variant: \"flush\",\n                children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  hidden: hide,\n                  className: \"addUpdateForm\",\n                  children: /*#__PURE__*/_jsxDEV(AddEditForm, {\n                    close: closeForm,\n                    updateCompo: closeForm,\n                    data: {\n                      description,\n                      date,\n                      time,\n                      assignedTo,\n                      id\n                    },\n                    detectOps: formOps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 10\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 9\n                }, this), listTask.map(data => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      lg: 1,\n                      md: 1,\n                      sm: 1,\n                      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          class: \"fa fa-user-circle\",\n                          \"aria-hidden\": \"true\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 143,\n                          columnNumber: 12\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 12\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      lg: 11,\n                      sm: 11,\n                      md: 11,\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: data.task_msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 12\n                      }, this), new Date(data.task_date).toLocaleDateString('fr-CA'), /*#__PURE__*/_jsxDEV(\"h5\", {\n                        onClick: edit(data),\n                        style: {\n                          marginTop: '-25px'\n                        },\n                        className: \" float-right hideEdit hover\",\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          class: \"fa fa-pencil\",\n                          \"aria-hidden\": \"true\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 155,\n                          columnNumber: 12\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 12\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 10\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 2\n  }, this);\n};\n\n_s(FormCrud, \"leHsEcl+wEMcunzeqdmv+3CPdq0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FormCrud;\nexport default FormCrud; // class FormCrud extends Component {\n// \tstate = {\n// \t\tdescription: 'Follow up',\n// \t\tid: '',\t\t\n// \t\tdate: new Date().toLocaleDateString('fr-CA'),\n// \t\ttime: '00:00',\n// \t\tassignedTo: 'Vetri',\n// \t\thide: true,\n// \t\tlistTask: [],\n// \t\tformOps:'',\t\t\n// \t\tresult:''\n// \t}\n// \tcomponentDidMount() {\n// \t\tconst token = JSON.parse(localStorage.getItem('token'));\t\t\n// \t\taxios.interceptors.request.use(function (config) {\n//             config.headers.common['Authorization'] = 'Bearer ' +token;\t\n// \t\t\tconfig.headers.common['Accept'] = 'application/json';\n// \t\t\t config.headers.common['Content-Type'] = 'application/json';\n// \t\t\treturn config;\n// \t\t})\n// \t\tthis.props.getData();\n// \t\tthis.getData();\n// \t};\n// \tgetData=()=>{\n// \t\tconsole.log('hitingo on update')\n// \t\taxios.get(`${API.baseUrl}/task/lead_58be137bfde045e7a0c8d107783c4598`)\n//         .then(response => response.data)\n//         .then(\n//             result => {\n// \t\t\t\tconsole.log(result)\n// \t\t\t\tthis.setState({\n// \t\t\t\t\tlistTask: result.results\t\t\t\t\t\n// \t\t\t\t});\n// \t\t\t\tthis.forceUpdate()\n//             },\n//             err => {\n//             }\n//         )\n// \t}\n// convertTime(data) {\n// \t\tlet time = Number(data);\t\n// \t\tlet hrs = Math.floor(time / 3600);\n// \t\tlet min = Math.floor(time % 3600 / 60);\t\t\n// \t\treturn ( ('0' + hrs).slice(-2) + \":\" +('0' + min).slice(-2)  )\n// \t}\n// edit = (i) => {\n// \tthis.setState({\n// \t\tid: i.id\n// \t})\n// \tif (i.id) {\n// \t\taxios\n// \t\t\t.get(`${API.baseUrl}/task/lead_04412ba1d622466cab1f0ad941fcf303/${i.id}`)\n// \t\t\t.then(response => response.data)\n// \t\t\t.then(\n// \t\t\t\tresult => {\t\t\t\t\t\t\t\t\t\t\t\t\n// \t\t\t\t\tconsole.log(result) \n// \t\t\t\t\tthis.setState({result:result})\n// \t\t\t\t\tthis.setState({\n// \t\t\t\t\t\tdescription: result.results.task_msg,\n// \t\t\t\t\t\tid: result.results.id,\n// \t\t\t\t\t\tdate: new Date(result.results.task_date).toLocaleDateString('fr-CA'),\n// \t\t\t\t\t\ttime:this.convertTime(result.results.task_time),\n// \t\t\t\t\t\tassignedTo: result.results.assigned_user,\n// \t\t\t\t\t\thide: false,\n// \t\t\t\t\t\tformOps:'edit'\n// \t\t\t\t\t});\t\t\t\t\t\t\n// \t\t\t\t},\n// \t\t\t\terr => {\n// \t\t\t\t\tconsole.log(err);\n// \t\t\t\t}\n// \t\t\t);\n// \t}\n// };\n// \tcloseForm = () => {\n// \t\tthis.setState({\t\n// \t\t\thide: true,\n// \t\t\tid: ''\n// \t\t})\n// \t};\n// \tdisplayForm = () => {\n// \t\tthis.setState({\t\t\t\n// \t\t\thide: false,\n// \t\t\tformOps:'add'\t\t\t\t\t\t\t\n// \t\t})\n// \t};\t\n// \trender() {\n// \t\tconst {  listTask, hide ,description,date,time,assignedTo,id,formOps} = this.state;\n// \t\treturn (\n// <div>\n// \t<Header />\n// \t<Container className=\"formHead\">\n// \t\t<Row>\n// \t\t\t<Col>\n// \t\t\t</Col>\n// \t\t\t<Col>\n// \t\t\t<Card style={{ width: '28rem' }}>\n// \t\t\t\t<Card.Header >TASKS {listTask.length?listTask.length:0} \n// \t\t\t\t<a  onClick={this.displayForm} href> \n// \t\t\t\t<h5 className=\"float-right hover \">\n// \t\t\t\t\t<i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n// \t\t\t\t</h5>\n// \t\t\t\t</a>\n// \t\t\t\t</Card.Header >\n// \t\t\t\t<ListGroup variant=\"flush\">\n// \t\t\t\t\t<ListGroup.Item hidden={hide}\n// \t\t\t\t\tclassName=\"addUpdateForm\"\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<AddEditForm\n// \t\t\t\t\t\t close={this.closeForm.bind(this)}\n// \t\t\t\t\t\t updateCompo={this.getData.bind(this)}\n// \t\t\t\t\t\t data={{\n//                               description,date,time,assignedTo,id\n// \t\t\t\t\t\t }}\n// \t\t\t\t\t\t detectOps={formOps}\n// \t\t\t\t\t\t />\n// \t\t\t\t\t</ListGroup.Item>\n// \t\t\t\t\t{listTask.map(data => (\n// \t\t\t\t\t\t<ListGroup.Item>\n// \t\t\t\t\t\t\t<Row>\n// \t\t\t\t\t\t\t\t<Col lg={1} md={1} sm={1}>\n// \t\t\t\t\t\t\t\t<h3>\n// \t\t\t\t\t\t\t\t<i class=\"fa fa-user-circle\" aria-hidden=\"true\"></i>\n// \t\t\t\t\t\t\t    </h3>\n// \t\t\t\t\t\t\t\t</Col>\n// \t\t\t\t\t\t\t\t<Col lg={11} sm={11} md={11}>\n// \t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\t{data.task_msg}</h5>\t\t\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\t{new Date(data.task_date).toLocaleDateString('fr-CA')}\n// \t\t\t\t\t\t\t\t<h5 onClick={() => this.edit(data)} style={{ marginTop: '-25px' }} className=\" float-right hideEdit hover\">\n// \t\t\t\t\t\t\t\t<i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n// \t\t\t\t\t\t\t\t</h5>\n// \t\t\t\t\t\t\t\t</Col>\n// \t\t\t\t\t\t\t</Row>\n// \t\t\t\t\t\t</ListGroup.Item>\n// \t\t\t\t\t))}\n// \t\t\t\t</ListGroup>\n// \t\t\t</Card>\n// \t\t\t</Col>\n// \t\t\t<Col>\n// \t\t\t</Col>\n// \t\t</Row>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n// \t</Container>\n// </div>\n// \t\t)\n// \t}\n// }\n// const mapStateToProps = (state) => (\t\t\n// \t{\t\n// \talltasks: state.FormCrudReducer.data,\n// \tstatusMessage: state.FormCrudReducer.status,\t\n//      }\n// )\n// export default connect(mapStateToProps, { getData, postData, updateData })(FormCrud);\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCrud\");","map":{"version":3,"sources":["C:/React/Spice_Blue/gitSPice/src/components/Form/FormCrud.jsx"],"names":["React","Component","useEffect","useState","useRef","axios","connect","useDispatch","useSelector","Container","Card","ListGroup","Col","Row","getData","postData","updateData","API","AddEditForm","Header","FormCrud","task","state","FormCrudReducer","data","dispatch","description","setDescription","id","setId","date","setDate","Date","toLocaleDateString","time","setTime","assignedTo","setAssignedTo","hide","setHide","listTask","setListTask","formOps","setformOps","result","setResult","token","JSON","parse","localStorage","getItem","interceptors","request","use","config","headers","common","console","log","convertTime","Number","hrs","Math","floor","min","slice","closeForm","displayForm","edit","i","setState","get","baseUrl","then","response","results","task_msg","task_date","task_time","assigned_user","err","width","length","map","marginTop"],"mappings":"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","sourcesContent":["import React, { Component,useEffect,useState,useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { connect,useDispatch,useSelector } from 'react-redux';\r\nimport { Container,  Card, ListGroup,Col, Row } from 'react-bootstrap';\r\nimport { getData, postData, updateData } from '../../store/Action/FormCrud';\r\nimport './Form.css';\r\nimport API from '../../API/Api';\r\nimport AddEditForm from './AddEditForm';\r\nimport Header from '../Header/Header';\r\n\r\n\r\nconst FormCrud=()=> {\r\n\tconst task= useSelector(state => state.FormCrudReducer.data);\r\n\tconst dispatch = useDispatch();\r\nconst [description,setDescription]=useState('')\r\nconst [id,setId]=useState('');\r\nconst [date,setDate]=useState(new Date().toLocaleDateString('fr-CA'));\r\nconst[time,setTime]=useState('00:00');\r\nconst[assignedTo,setAssignedTo]=useState('')\r\nconst[hide,setHide]=useState(true);\r\nconst [listTask,setListTask]=useState([]);\r\nconst[formOps,setformOps]=useState('');\r\nconst [result,setResult]=useState('');\r\n\r\n\r\n\r\nuseEffect(() => {\r\n\tconst token = JSON.parse(localStorage.getItem('token'));\t\t\r\n\t\taxios.interceptors.request.use(function (config) {\r\n            config.headers.common['Authorization'] = 'Bearer ' +token;\t\r\n\t\t\tconfig.headers.common['Accept'] = 'application/json';\r\n\t\t\t config.headers.common['Content-Type'] = 'application/json';\r\n\r\n\t\t\treturn config;\r\n\t\t})\r\n\r\n\t\tdispatch(getData())\r\n\t\tconsole.log(task)\r\n\t\tsetListTask(task)\r\n}, [dispatch])\r\n\r\nconst convertTime=(data)=> {\r\n\t\tlet time = Number(data);\t\r\n\t\tlet hrs = Math.floor(time / 3600);\r\n\t\tlet min = Math.floor(time % 3600 / 60);\t\t\r\n\t\treturn ( ('0' + hrs).slice(-2) + \":\" +('0' + min).slice(-2)  )\r\n\t}\r\n\t\tconst closeForm = () => {\r\n\t\t\tsetHide(true)\r\n\t\t\tsetId('')\t\t\r\n\t};\r\n\r\n\tconst displayForm = () => {\r\n\t\tsetHide(false)\r\n\t\tsetformOps('add')\t\t\r\n\t\t\r\n\t};\t\r\n\tedit = (i) => {\r\n\t\t\r\n\r\n\t\tthis.setState({\r\n\t\t\tid: i.id\r\n\t\t})\r\n\t\tif (i.id) {\r\n\t\t\t\r\n\t\t\taxios\r\n\t\t\t\t.get(`${API.baseUrl}/task/lead_04412ba1d622466cab1f0ad941fcf303/${i.id}`)\r\n\t\t\t\t.then(response => response.data)\r\n\t\t\t\t.then(\r\n\t\t\t\t\tresult => {\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tconsole.log(result) \r\n\t\t\t\t\t\tthis.setState({result:result})\r\n\t\t\t\t\t\t   \r\n\t\t\t\t\t\tsetResult(result);\r\n\t\t\t\t\t\tsetDescription(result.results.task_msg);\r\n\t\t\t\t\t\tsetId(result.results.id);\r\n\t\t\t\t\t\tsetDate(new Date(result.results.task_date).toLocaleDateString('fr-CA'))\r\n\t\t\t\t\t\tsetTime(convertTime(result.results.task_time))\r\n\t\t\t\t\t\tsetAssignedTo(result.results.assigned_user)\r\n\t\t\t\t\t\tsetHide(false)\r\n\t\t\t\t\t\tsetformOps('edit');\r\n\t\t\t\t\t\t\tdescription=result.results.task_msg,\r\n\t\t\t\t\t\t\tid=result.results.id,\r\n\t\t\t\t\t\t\tdate=new Date(result.results.task_date).toLocaleDateString('fr-CA'),\r\n\t\t\t\t\t\t\ttime=this.convertTime(result.results.task_time),\r\n\t\t\t\t\t\t\tassignedTo=result.results.assigned_user,\r\n\t\t\t\t\t\t\thide= false,\r\n\t\t\t\t\t\t\tformOps='edit'\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\terr => {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t}\r\n\r\n\t};\t\r\n\r\nreturn(\r\n\t<div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Container className=\"formHead\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Card style={{ width: '28rem' }}>\r\n\t\t\t\t\t\t\t<Card.Header >TASKS {listTask.length?listTask.length:0} \r\n\t\t\t\t\t\t\t<a  onClick={displayForm} href> \r\n\t\t\t\t\t\t\t<h5 className=\"float-right hover \">\r\n\t\t\t\t\t\t\t\t<i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</Card.Header >\r\n\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t<ListGroup.Item hidden={hide}\r\n\t\t\t\t\t\t\t\tclassName=\"addUpdateForm\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<AddEditForm\r\n\t\t\t\t\t\t\t\t\t close={closeForm}\r\n\t\t\t\t\t\t\t\t\t updateCompo={closeForm}\r\n\t\t\t\t\t\t\t\t\t data={{\r\n                                          description,date,time,assignedTo,id\r\n\t\t\t\t\t\t\t\t\t }}\r\n\t\t\t\t\t\t\t\t\t detectOps={formOps}\r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t{listTask.map(data => (\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col lg={1} md={1} sm={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-user-circle\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<Col lg={11} sm={11} md={11}>\r\n\t\t\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{data.task_msg}</h5>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(data.task_date).toLocaleDateString('fr-CA')}\r\n\t\t\t\t\t\t\t\t\t\t\t<h5 \r\n\t\t\t\t\t\t\t\t\t\t\tonClick={edit(data)} \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginTop: '-25px' }} className=\" float-right hideEdit hover\">\r\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t</Card>\r\n\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\r\n\t</div>\r\n);\r\n}\r\nexport default FormCrud;\r\n\r\n// class FormCrud extends Component {\r\n// \tstate = {\r\n// \t\tdescription: 'Follow up',\r\n// \t\tid: '',\t\t\r\n// \t\tdate: new Date().toLocaleDateString('fr-CA'),\r\n// \t\ttime: '00:00',\r\n// \t\tassignedTo: 'Vetri',\r\n// \t\thide: true,\r\n// \t\tlistTask: [],\r\n// \t\tformOps:'',\t\t\r\n// \t\tresult:''\r\n// \t}\r\n\t\r\n// \tcomponentDidMount() {\r\n\t\t\r\n// \t\tconst token = JSON.parse(localStorage.getItem('token'));\t\t\r\n// \t\taxios.interceptors.request.use(function (config) {\r\n//             config.headers.common['Authorization'] = 'Bearer ' +token;\t\r\n// \t\t\tconfig.headers.common['Accept'] = 'application/json';\r\n// \t\t\t config.headers.common['Content-Type'] = 'application/json';\r\n\r\n// \t\t\treturn config;\r\n// \t\t})\r\n\t\t\r\n// \t\tthis.props.getData();\r\n// \t\tthis.getData();\r\n// \t};\r\n\t\r\n\t\r\n// \tgetData=()=>{\r\n// \t\tconsole.log('hitingo on update')\r\n// \t\taxios.get(`${API.baseUrl}/task/lead_58be137bfde045e7a0c8d107783c4598`)\r\n//         .then(response => response.data)\r\n//         .then(\r\n//             result => {\r\n// \t\t\t\tconsole.log(result)\r\n// \t\t\t\tthis.setState({\r\n// \t\t\t\t\tlistTask: result.results\t\t\t\t\t\r\n// \t\t\t\t});\r\n// \t\t\t\tthis.forceUpdate()\r\n//             },\r\n//             err => {\r\n                \r\n\r\n//             }\r\n//         )\r\n// \t}\r\n\t\t  \r\n// convertTime(data) {\r\n// \t\tlet time = Number(data);\t\r\n// \t\tlet hrs = Math.floor(time / 3600);\r\n// \t\tlet min = Math.floor(time % 3600 / 60);\t\t\r\n// \t\treturn ( ('0' + hrs).slice(-2) + \":\" +('0' + min).slice(-2)  )\r\n// \t}\r\n\t\r\n\t\r\n\r\n\t// edit = (i) => {\r\n\t\t\r\n\r\n\t// \tthis.setState({\r\n\t// \t\tid: i.id\r\n\t// \t})\r\n\t// \tif (i.id) {\r\n\t\t\t\r\n\t// \t\taxios\r\n\t// \t\t\t.get(`${API.baseUrl}/task/lead_04412ba1d622466cab1f0ad941fcf303/${i.id}`)\r\n\t// \t\t\t.then(response => response.data)\r\n\t// \t\t\t.then(\r\n\t// \t\t\t\tresult => {\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t// \t\t\t\t\tconsole.log(result) \r\n\t// \t\t\t\t\tthis.setState({result:result})\r\n\t// \t\t\t\t\tthis.setState({\r\n\t// \t\t\t\t\t\tdescription: result.results.task_msg,\r\n\t// \t\t\t\t\t\tid: result.results.id,\r\n\t// \t\t\t\t\t\tdate: new Date(result.results.task_date).toLocaleDateString('fr-CA'),\r\n\t// \t\t\t\t\t\ttime:this.convertTime(result.results.task_time),\r\n\t// \t\t\t\t\t\tassignedTo: result.results.assigned_user,\r\n\t// \t\t\t\t\t\thide: false,\r\n\t// \t\t\t\t\t\tformOps:'edit'\r\n\t// \t\t\t\t\t});\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t// \t\t\t\t},\r\n\t// \t\t\t\terr => {\r\n\t// \t\t\t\t\tconsole.log(err);\r\n\t// \t\t\t\t}\r\n\t// \t\t\t);\r\n\t// \t}\r\n\r\n\t// };\r\n\t\r\n// \tcloseForm = () => {\r\n\t\t\r\n// \t\tthis.setState({\t\r\n\t\t\t\r\n// \t\t\thide: true,\r\n// \t\t\tid: ''\r\n// \t\t})\r\n// \t};\r\n\t\r\n// \tdisplayForm = () => {\r\n// \t\tthis.setState({\t\t\t\r\n// \t\t\thide: false,\r\n// \t\t\tformOps:'add'\t\t\t\t\t\t\t\r\n// \t\t})\r\n\t\t\r\n// \t};\t\r\n\t\r\n\t\r\n\r\n\t\r\n// \trender() {\r\n\t\t\r\n// \t\tconst {  listTask, hide ,description,date,time,assignedTo,id,formOps} = this.state;\r\n// \t\treturn (\r\n\t\t\t// <div>\r\n\t\t\t// \t<Header />\r\n\t\t\t// \t<Container className=\"formHead\">\r\n\t\t\t\t\t\r\n\t\t\t// \t\t<Row>\r\n\t\t\t// \t\t\t<Col>\r\n\t\t\t// \t\t\t</Col>\r\n\t\t\t\t\t\t\r\n\t\t\t// \t\t\t<Col>\r\n\t\t\t// \t\t\t<Card style={{ width: '28rem' }}>\r\n\t\t\t// \t\t\t\t<Card.Header >TASKS {listTask.length?listTask.length:0} \r\n\t\t\t// \t\t\t\t<a  onClick={this.displayForm} href> \r\n\t\t\t// \t\t\t\t<h5 className=\"float-right hover \">\r\n\t\t\t// \t\t\t\t\t<i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\r\n\t\t\t// \t\t\t\t</h5>\r\n\t\t\t// \t\t\t\t</a>\r\n\t\t\t// \t\t\t\t</Card.Header >\r\n\t\t\t// \t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t// \t\t\t\t\t<ListGroup.Item hidden={hide}\r\n\t\t\t// \t\t\t\t\tclassName=\"addUpdateForm\"\r\n\t\t\t// \t\t\t\t\t>\r\n\t\t\t// \t\t\t\t\t\t<AddEditForm\r\n\t\t\t// \t\t\t\t\t\t close={this.closeForm.bind(this)}\r\n\t\t\t// \t\t\t\t\t\t updateCompo={this.getData.bind(this)}\r\n\t\t\t// \t\t\t\t\t\t data={{\r\n            //                               description,date,time,assignedTo,id\r\n\t\t\t// \t\t\t\t\t\t }}\r\n\t\t\t// \t\t\t\t\t\t detectOps={formOps}\r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t// \t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t// \t\t\t\t\t</ListGroup.Item>\r\n\t\t\t// \t\t\t\t\t{listTask.map(data => (\r\n\t\t\t// \t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t// \t\t\t\t\t\t\t<Row>\r\n\t\t\t// \t\t\t\t\t\t\t\t<Col lg={1} md={1} sm={1}>\r\n\t\t\t// \t\t\t\t\t\t\t\t<h3>\r\n\t\t\t// \t\t\t\t\t\t\t\t<i class=\"fa fa-user-circle\" aria-hidden=\"true\"></i>\r\n\t\t\t// \t\t\t\t\t\t\t    </h3>\r\n\t\t\t// \t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t// \t\t\t\t\t\t\t\t<Col lg={11} sm={11} md={11}>\r\n\t\t\t// \t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t// \t\t\t\t\t\t\t\t{data.task_msg}</h5>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t// \t\t\t\t\t\t\t\t{new Date(data.task_date).toLocaleDateString('fr-CA')}\r\n\t\t\t// \t\t\t\t\t\t\t\t<h5 onClick={() => this.edit(data)} style={{ marginTop: '-25px' }} className=\" float-right hideEdit hover\">\r\n\t\t\t// \t\t\t\t\t\t\t\t<i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n\t\t\t// \t\t\t\t\t\t\t\t</h5>\r\n\t\t\t// \t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t// \t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t// \t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t// \t\t\t\t\t))}\r\n\t\t\t// \t\t\t\t</ListGroup>\r\n\t\t\t// \t\t\t</Card>\r\n\r\n\t\t\t// \t\t\t</Col>\r\n\r\n\t\t\t// \t\t\t<Col>\r\n\t\t\t// \t\t\t</Col>\r\n\t\t\t// \t\t</Row>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t// \t</Container>\r\n\t\t\t// </div>\r\n// \t\t)\r\n\r\n// \t}\r\n// }\r\n// const mapStateToProps = (state) => (\t\t\r\n// \t{\t\r\n// \talltasks: state.FormCrudReducer.data,\r\n// \tstatusMessage: state.FormCrudReducer.status,\t\r\n//      }\r\n// )\r\n// export default connect(mapStateToProps, { getData, postData, updateData })(FormCrud);"]},"metadata":{},"sourceType":"module"}