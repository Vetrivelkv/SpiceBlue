{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Spice_Blue\\\\gitSPice\\\\src\\\\components\\\\Form\\\\AddEditForm.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Button, Col, Row } from 'react-bootstrap';\nimport { getData, postData, updateData, deleteData } from '../../store/Action/FormCrud';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddEditForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = e => {\n      e.preventDefault();\n      const {\n        description,\n        date,\n        time,\n        assignedTo,\n        id\n      } = this.state;\n      var hms = time; // your input string\n\n      var a = hms.split(':'); // split it at the colons\t\t\t\t\n\n      var seconds = +a[0] * 60 * 60 + +a[1] * 60;\n      const params = {\n        task_msg: description,\n        task_date: date,\n        task_time: seconds,\n        is_completed: 1,\n        assigned_user: assignedTo,\n        time_zone: -330\n      };\n\n      if (id === '') {\n        this.props.postData(params);\n        this.props.close();\n        setTimeout(() => {\n          this.props.updateCompo();\n        }, 2000);\n      } else {\n        this.props.updateData(params, id);\n        this.props.close();\n        setTimeout(() => {\n          this.props.updateCompo();\n        }, 1000);\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.delete = () => {\n      const {\n        id\n      } = this.state;\n\n      if (id) {\n        this.props.deleteData(id);\n        this.props.close();\n        setTimeout(() => {\n          this.props.updateCompo();\n        }, 1000);\n      }\n    };\n\n    this.state = {\n      description: this.props.data.description,\n      id: this.props.data.id,\n      date: this.props.data.date,\n      time: this.props.data.time,\n      assignedTo: this.props.data.assignedTo\n    };\n    console.log(props);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.detectOps === \"edit\") {\n      console.log('working as expected');\n\n      if (prevProps !== this.props) {\n        this.setState({\n          description: this.props.data.description,\n          id: this.props.data.id,\n          date: this.props.data.date,\n          time: this.props.data.time,\n          assignedTo: this.props.data.assignedTo\n        });\n      }\n    } else {\n      if (prevProps !== this.props) {\n        this.setState({\n          description: 'Follow up',\n          id: '',\n          date: new Date().toLocaleDateString('fr-CA'),\n          time: '00:00',\n          assignedTo: 'Vetri'\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      description,\n      date,\n      time,\n      assignedTo,\n      id\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.submit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          xs: 12,\n          sm: 12,\n          md: 12,\n          lg: 12,\n          xl: 12,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Task Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Description if task\",\n            onChange: this.handleChange,\n            value: description,\n            name: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"acount-filled\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          xs: 6,\n          sm: 6,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"date\",\n            onChange: this.handleChange,\n            placeholder: \"date\",\n            value: date,\n            name: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          xs: 6,\n          sm: 6,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"time\",\n            onChange: this.handleChange,\n            placeholder: \"time\",\n            value: time,\n            name: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"acount-filled\",\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          xs: 12,\n          sm: 12,\n          md: 12,\n          lg: 12,\n          xl: 12,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Assign User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            onChange: this.handleChange,\n            placeholder: \"Assign User\",\n            value: assignedTo,\n            name: \"assignedTo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          sm: 1,\n          lg: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          sm: 4,\n          lg: 4,\n          children: id === '' ? \"\" : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-trash-o\",\n              \"aria-hidden\": \"true\",\n              onClick: this.delete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          sm: 1,\n          lg: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-secondary\",\n            type: \"button\",\n            onClick: this.props.close,\n            className: \"formBtn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            className: \"formBtn\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  alltasks: state.FormCrudReducer.Tasks,\n  statusMessage: state.FormCrudReducer.status\n});\n\nexport default connect(mapStateToProps, {\n  getData,\n  postData,\n  updateData,\n  deleteData\n})(AddEditForm);","map":{"version":3,"sources":["C:/React/Spice_Blue/gitSPice/src/components/Form/AddEditForm.jsx"],"names":["React","Component","Form","Button","Col","Row","getData","postData","updateData","deleteData","connect","AddEditForm","constructor","props","submit","e","preventDefault","description","date","time","assignedTo","id","state","hms","a","split","seconds","params","task_msg","task_date","task_time","is_completed","assigned_user","time_zone","close","setTimeout","updateCompo","handleChange","setState","target","name","value","delete","data","console","log","componentDidUpdate","prevProps","detectOps","Date","toLocaleDateString","render","mapStateToProps","alltasks","FormCrudReducer","Tasks","statusMessage","status"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAUC,IAAV,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,GAA7B,QAAwC,iBAAxC;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,UAA5B,EAAuCC,UAAvC,QAAyD,6BAAzD;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAKA,MAAMC,WAAN,SAA0BV,SAA1B,CAAqC;AACjCW,EAAAA,WAAW,CAACC,KAAD,EAAO;AACX,UAAMA,KAAN;;AADW,SA0ClBC,MA1CkB,GA0CRC,CAAD,IAAO;AAElBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,IAAf;AAAqBC,QAAAA,IAArB;AAA2BC,QAAAA,UAA3B;AAAuCC,QAAAA;AAAvC,UAA8C,KAAKC,KAAzD;AACA,UAAIC,GAAG,GAAGJ,IAAV,CAJkB,CAIA;;AAClB,UAAIK,CAAC,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAR,CALkB,CAKM;;AACxB,UAAIC,OAAO,GAAI,CAACF,CAAC,CAAC,CAAD,CAAH,GAAU,EAAV,GAAe,EAAf,GAAqB,CAACA,CAAC,CAAC,CAAD,CAAH,GAAU,EAA5C;AACA,YAAMG,MAAM,GAAG;AACdC,QAAAA,QAAQ,EAACX,WADK;AAEdY,QAAAA,SAAS,EAACX,IAFI;AAGdY,QAAAA,SAAS,EAAEJ,OAHG;AAIdK,QAAAA,YAAY,EAAC,CAJC;AAKdC,QAAAA,aAAa,EAACZ,UALA;AAMda,QAAAA,SAAS,EAAC,CAAC;AANG,OAAf;;AASA,UAAIZ,EAAE,KAAK,EAAX,EAAe;AAET,aAAKR,KAAL,CAAWN,QAAX,CAAoBoB,MAApB;AACA,aAAKd,KAAL,CAAWqB,KAAX;AAEAC,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKtB,KAAL,CAAWuB,WAAX;AACH,SAFS,EAEP,IAFO,CAAV;AAML,OAXD,MAWO;AACO,aAAKvB,KAAL,CAAWL,UAAX,CAAsBmB,MAAtB,EAA8BN,EAA9B;AACA,aAAKR,KAAL,CAAWqB,KAAX;AACAC,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKtB,KAAL,CAAWuB,WAAX;AACH,SAFS,EAEP,IAFO,CAAV;AAMb;AAEE,KAhFiB;;AAAA,SAiFlBC,YAjFkB,GAiFFtB,CAAD,IAAO;AACxB,WAAKuB,QAAL,CAAc;AACb,SAACvB,CAAC,CAACwB,MAAF,CAASC,IAAV,GAAiBzB,CAAC,CAACwB,MAAF,CAASE;AADb,OAAd;AAGG,KArFiB;;AAAA,SAsFlBC,MAtFkB,GAsFT,MAAM;AACjB,YAAM;AAAErB,QAAAA;AAAF,UAAS,KAAKC,KAApB;;AAEA,UAAID,EAAJ,EAAQ;AACE,aAAKR,KAAL,CAAWJ,UAAX,CAAsBY,EAAtB;AACT,aAAKR,KAAL,CAAWqB,KAAX;AACSC,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKtB,KAAL,CAAWuB,WAAX;AACH,SAFS,EAEP,IAFO,CAAV;AAGT;AAED,KAjGoB;;AAEX,SAAKd,KAAL,GAAa;AACZL,MAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAW8B,IAAX,CAAgB1B,WADjB;AAEZI,MAAAA,EAAE,EAAE,KAAKR,KAAL,CAAW8B,IAAX,CAAgBtB,EAFR;AAGZH,MAAAA,IAAI,EAAE,KAAKL,KAAL,CAAW8B,IAAX,CAAgBzB,IAHV;AAIZC,MAAAA,IAAI,EAAE,KAAKN,KAAL,CAAW8B,IAAX,CAAgBxB,IAJV;AAKZC,MAAAA,UAAU,EAAE,KAAKP,KAAL,CAAW8B,IAAX,CAAgBvB;AALhB,KAAb;AAOHwB,IAAAA,OAAO,CAACC,GAAR,CAAYhC,KAAZ;AAEH;;AACDiC,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AACzB,QAAG,KAAKlC,KAAL,CAAWmC,SAAX,KAAyB,MAA5B,EACA;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AACO,UAAGE,SAAS,KAAI,KAAKlC,KAArB,EACA;AACK,aAAKyB,QAAL,CAAc;AACVrB,UAAAA,WAAW,EAAC,KAAKJ,KAAL,CAAW8B,IAAX,CAAgB1B,WADlB;AAEVI,UAAAA,EAAE,EAAE,KAAKR,KAAL,CAAW8B,IAAX,CAAgBtB,EAFV;AAGVH,UAAAA,IAAI,EAAE,KAAKL,KAAL,CAAW8B,IAAX,CAAgBzB,IAHZ;AAIVC,UAAAA,IAAI,EAAE,KAAKN,KAAL,CAAW8B,IAAX,CAAgBxB,IAJZ;AAKVC,UAAAA,UAAU,EAAE,KAAKP,KAAL,CAAW8B,IAAX,CAAgBvB;AALlB,SAAd;AAOJ;AAEX,KAdD,MAeK;AACD,UAAG2B,SAAS,KAAI,KAAKlC,KAArB,EACA;AACI,aAAKyB,QAAL,CAAc;AACVrB,UAAAA,WAAW,EAAE,WADH;AAEVI,UAAAA,EAAE,EAAE,EAFM;AAGVH,UAAAA,IAAI,EAAE,IAAI+B,IAAJ,GAAWC,kBAAX,CAA8B,OAA9B,CAHI;AAIV/B,UAAAA,IAAI,EAAE,OAJI;AAKVC,UAAAA,UAAU,EAAE;AALF,SAAd;AAOH;AAEJ;AACJ;;AAyDD+B,EAAAA,MAAM,GAAE;AACJ,UAAK;AAAClC,MAAAA,WAAD;AAAaC,MAAAA,IAAb;AAAkBC,MAAAA,IAAlB;AAAuBC,MAAAA,UAAvB;AAAkCC,MAAAA;AAAlC,QAAsC,KAAKC,KAAhD;AACA,wBACI,QAAC,IAAD;AAAO,MAAA,QAAQ,EAAE,KAAKR,MAAtB;AAAA,8BAEA,QAAC,IAAD,CAAM,GAAN;AAAA,+BACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEV,GAAhB;AAAqB,UAAA,EAAE,EAAE,EAAzB;AAA6B,UAAA,EAAE,EAAE,EAAjC;AAAqC,UAAA,EAAE,EAAE,EAAzC;AAA6C,UAAA,EAAE,EAAE,EAAjD;AAAqD,UAAA,EAAE,EAAE,EAAzD;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,QAAQ,MADZ;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,WAAW,EAAC,qBAHhB;AAII,YAAA,QAAQ,EAAE,KAAKiC,YAJnB;AAKI,YAAA,KAAK,EAAEpB,WALX;AAMI,YAAA,IAAI,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFA,eAgBA,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,SAAS,EAAC,eAApB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEb,GAAhB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAA4B,UAAA,EAAE,EAAE,CAAhC;AAAmC,UAAA,EAAE,EAAE,CAAvC;AAA0C,UAAA,EAAE,EAAE,CAA9C;AAAiD,UAAA,EAAE,EAAE,CAArD;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,QAAQ,MADZ;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,QAAQ,EAAE,KAAKiC,YAHnB;AAII,YAAA,WAAW,EAAC,MAJhB;AAKI,YAAA,KAAK,EAAEnB,IALX;AAMI,YAAA,IAAI,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAaI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEd,GAAhB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAA4B,UAAA,EAAE,EAAE,CAAhC;AAAmC,UAAA,EAAE,EAAE,CAAvC;AAA0C,UAAA,EAAE,EAAE,CAA9C;AAAiD,UAAA,EAAE,EAAE,CAArD;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,QAAQ,EAAE,KAAKiC,YAHnB;AAII,YAAA,WAAW,EAAC,MAJhB;AAKI,YAAA,KAAK,EAAElB,IALX;AAMI,YAAA,IAAI,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBA,eA2CA,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,SAAS,EAAC,eAApB;AAAA,+BACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEf,GAAhB;AAAqB,UAAA,EAAE,EAAE,EAAzB;AAA6B,UAAA,EAAE,EAAE,EAAjC;AAAqC,UAAA,EAAE,EAAE,EAAzC;AAA6C,UAAA,EAAE,EAAE,EAAjD;AAAqD,UAAA,EAAE,EAAE,EAAzD;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,QAAQ,MADZ;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,QAAQ,EAAE,KAAKiC,YAHnB;AAII,YAAA,WAAW,EAAC,aAJhB;AAKI,YAAA,KAAK,EAAEjB,UALX;AAMI,YAAA,IAAI,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA3CA,eAyDA,QAAC,GAAD;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAmB,UAAA,EAAE,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAkB,UAAA,EAAE,EAAE,CAAtB;AAAA,oBACKC,EAAE,KAAK,EAAP,GACD,EADC,gBAEA;AAAA,mCAEG;AAAG,cAAA,KAAK,EAAC,eAAT;AAAyB,6BAAY,MAArC;AAA4C,cAAA,OAAO,EAAE,KAAKqB;AAA1D;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA;AAHL;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAaI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAmB,UAAA,EAAE,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAeI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,mBAAhB;AAAqC,YAAA,IAAI,EAAC,QAA1C;AAAmD,YAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWqB,KAAvE;AAA8E,YAAA,SAAS,EAAC,SAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,uBAKI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,IAAI,EAAC,QAA/B;AAAwC,YAAA,SAAS,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAzDA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAyFH;;AA9LgC;;AAiMrC,MAAMkB,eAAe,GAAI9B,KAAD,KACvB;AACA+B,EAAAA,QAAQ,EAAE/B,KAAK,CAACgC,eAAN,CAAsBC,KADhC;AAEAC,EAAAA,aAAa,EAAElC,KAAK,CAACgC,eAAN,CAAsBG;AAFrC,CADuB,CAAxB;;AAOA,eAAe/C,OAAO,CAAC0C,eAAD,EAAkB;AAAE9C,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA,UAArB;AAAgCC,EAAAA;AAAhC,CAAlB,CAAP,CAAuEE,WAAvE,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {  Form, Button, Col, Row } from 'react-bootstrap';\r\nimport { getData, postData, updateData,deleteData } from '../../store/Action/FormCrud';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\nclass AddEditForm extends Component  {\r\n    constructor(props){\r\n           super(props);\r\n           this.state = {\r\n            description: this.props.data.description,\r\n            id: this.props.data.id,\t\t\r\n            date: this.props.data.date,\r\n            time: this.props.data.time,\r\n            assignedTo: this.props.data.assignedTo,                        \r\n        }\r\n        console.log(props)\r\n        \r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.detectOps === \"edit\")\r\n        {\r\n            console.log('working as expected')\r\n                   if(prevProps !==this.props)\r\n                   {\r\n                        this.setState({\r\n                            description:this.props.data.description,\r\n                            id: this.props.data.id,\t\t\r\n                            date: this.props.data.date,\r\n                            time: this.props.data.time,\r\n                            assignedTo: this.props.data.assignedTo, \r\n                        })\r\n                   }\r\n                   \r\n        }\r\n        else {\r\n            if(prevProps !==this.props)\r\n            {\r\n                this.setState({\r\n                    description: 'Follow up',\r\n                    id: '',\t\t\r\n                    date: new Date().toLocaleDateString('fr-CA'),\r\n                    time: '00:00',\r\n                    assignedTo: 'Vetri',\r\n                })\r\n            }\r\n            \r\n        }\r\n    }\r\n    submit = (e) => {\r\n\t\t\t\r\n\t\te.preventDefault();\r\n\t\tconst { description, date, time, assignedTo, id } = this.state;\r\n\t\tvar hms = time;   // your input string\r\n\t\tvar a = hms.split(':'); // split it at the colons\t\t\t\t\r\n\t\tvar seconds = (+a[0]) * 60 * 60 + (+a[1]) * 60 ;\r\n\t\tconst params = {\t\t\t\t\r\n\t\t\ttask_msg:description,\r\n\t\t\ttask_date:date,\r\n\t\t\ttask_time: seconds,\r\n\t\t\tis_completed:1,\t\t\r\n\t\t\tassigned_user:assignedTo,\r\n\t\t\ttime_zone:-330\r\n\t\t}\r\n\t\t\r\n\t\tif (id === '') {\t\t\r\n            \t\r\n        this.props.postData(params);\t\r\n        this.props.close();\t\r\n        \r\n        setTimeout(() => {\r\n            this.props.updateCompo();    \r\n        }, 2000);\r\n        \r\n\t\t\r\n\r\n\t\t} else {\r\n                this.props.updateData(params, id);\r\n                this.props.close();\t     \r\n                setTimeout(() => {\r\n                    this.props.updateCompo();    \r\n                }, 1000);\r\n                \r\n        \r\n\r\n\t\t}\r\n\r\n    };\r\n    handleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n    };\r\n    delete = () => {\r\n\t\tconst { id } = this.state;\r\n\r\n\t\tif (id) {\r\n            this.props.deleteData(id)\r\n\t\t\tthis.props.close();\t\r\n            setTimeout(() => {\r\n                this.props.updateCompo();    \r\n            }, 1000);\r\n\t\t}\r\n\r\n\t};\r\n    render(){\r\n        const{description,date,time,assignedTo,id}=this.state\r\n        return (\r\n            <Form  onSubmit={this.submit}>\r\n\r\n            <Form.Row>\r\n                <Form.Group as={Col} xs={12} sm={12} md={12} lg={12} xl={12} >\r\n                    <Form.Label>Task Description</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Description if task\"\r\n                        onChange={this.handleChange}\r\n                        value={description}\r\n                        name=\"description\"\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row className=\"acount-filled\">\r\n                <Form.Group as={Col} xs={6} sm={6} md={6} lg={6} xl={6} >\r\n                    <Form.Label>Date</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"date\"\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"date\"\r\n                        value={date}\r\n                        name=\"date\"\r\n\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group as={Col} xs={6} sm={6} md={6} lg={6} xl={6} >\r\n                    <Form.Label>Time</Form.Label>\r\n                    <Form.Control\r\n\r\n                        type=\"time\"\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"time\"\r\n                        value={time}\r\n                        name=\"time\"\r\n\r\n\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"acount-filled\">\r\n                <Form.Group as={Col} xs={12} sm={12} md={12} lg={12} xl={12} >\r\n                    <Form.Label>Assign User</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Assign User\"\r\n                        value={assignedTo}\r\n                        name=\"assignedTo\"\r\n\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Row>\r\n                <Col md={1} sm={1} lg={1}>\r\n                </Col>\r\n                <Col md={4} sm={4}lg={4}>\r\n                    {id === '' ? \r\n                    \"\"\r\n                    :<h4>\r\n                        \r\n                        <i class=\"fa fa-trash-o\" aria-hidden=\"true\" onClick={this.delete }></i>\r\n                    </h4>\r\n                    }\r\n                    \r\n                </Col>\r\n                <Col md={1} sm={1} lg={1}>\r\n                </Col>\r\n                <Col md={6} sm={6}>\r\n                    <Button variant=\"outline-secondary\"  type=\"button\" onClick={this.props.close} className=\"formBtn\" >\r\n                        Cancel\r\n                      </Button>\r\n                     &nbsp;\r\n                    <Button variant=\"success\" type=\"submit\" className=\"formBtn\">\r\n                       Save\r\n                      </Button>\r\n                    \r\n                    \r\n                    \r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n\r\n        )\r\n    }\r\n    \r\n}\r\nconst mapStateToProps = (state) => (\t\t\r\n\t{\t\r\n\talltasks: state.FormCrudReducer.Tasks,\r\n\tstatusMessage: state.FormCrudReducer.status,\r\n}\r\n)\r\n\r\nexport default connect(mapStateToProps, { getData, postData, updateData,deleteData })(AddEditForm);\r\n"]},"metadata":{},"sourceType":"module"}