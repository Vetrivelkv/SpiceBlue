{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Spice_Blue\\\\gitSPice\\\\src\\\\components\\\\Authentication\\\\routes\\\\AuthenticatedRoutes.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../Utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthenticatedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    /*#__PURE__*/\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    _jsxDEV(Route, { ...rest,\n      render: props => isLogin() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_c = AuthenticatedRoute;\nexport default AuthenticatedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticatedRoute\");","map":{"version":3,"sources":["C:/React/Spice_Blue/gitSPice/src/components/Authentication/routes/AuthenticatedRoutes.js"],"names":["React","Route","Redirect","isLogin","AuthenticatedRoute","component","Component","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,UAAxB;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AAC5D;AAAA;AAEI;AACA;AACA,YAAC,KAAD,OAAWA,IAAX;AAAiB,MAAA,MAAM,EAAEC,KAAK,IAC1BL,OAAO,kBACH,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,cADG,gBAEL,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA;AAJJ;AAUH,CAXD;;KAAMJ,kB;AAaN,eAAeA,kBAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from '../Utils';\r\n\r\nconst AuthenticatedRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isLogin() ?\r\n                <Component {...props} />\r\n            : <Redirect to=\"/\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default AuthenticatedRoute;"]},"metadata":{},"sourceType":"module"}