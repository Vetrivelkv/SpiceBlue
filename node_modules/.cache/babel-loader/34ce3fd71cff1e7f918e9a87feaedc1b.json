{"ast":null,"code":"import axios from 'axios';\nimport API from '../../API/Api';\nexport const Delete = 'delete';\nexport const getAll = 'getAll';\nexport const Create = 'Create';\nexport const Update = 'Update';\nexport const deleteData = id => async dispatch => {\n  await axios.delete(`${API.baseUrl}/task/lead_58be137bfde045e7a0c8d107783c4598/${id}`).then(response => response.data).then(result => {\n    console.log(result);\n    dispatch({\n      type: Delete,\n      payload: 'Success'\n    });\n  }, err => {\n    dispatch({\n      type: Delete,\n      payload: 'Error'\n    });\n  });\n};\nexport const postData = data => async dispatch => {\n  await axios.post(`${API.baseUrl}/task/lead_58be137bfde045e7a0c8d107783c4598`, data).then(response => response.data).then(result => {\n    console.log(result);\n    dispatch({\n      type: Create,\n      payload: 'Success'\n    }); // window.location.reload();\t\t                \n  }, err => {\n    dispatch({\n      type: Create,\n      payload: 'Error'\n    });\n  });\n}; // this module update the ttask\n\nexport const updateData = (data, id) => async dispatch => {\n  await axios.put(`${API.baseUrl}/task/lead_58be137bfde045e7a0c8d107783c4598/${id}`, data).then(response => response.data).then(result => {\n    dispatch({\n      type: Update,\n      payload: 'Success'\n    });\n    dispatch(getData);\n  }, err => {\n    dispatch({\n      type: Update,\n      payload: 'Error'\n    });\n  });\n}; // this module handles get all task\n\nexport const getData = () => async dispatch => {\n  await axios.get(`${API.baseUrl}/task/lead_58be137bfde045e7a0c8d107783c4598`).then(response => response.data).then(result => {\n    dispatch({\n      type: getAll,\n      payload: result.results\n    });\n  }, err => {\n    dispatch({\n      type: getAll,\n      payload: []\n    });\n  });\n};","map":{"version":3,"sources":["C:/React/Spice_Blue/gitSPice/src/store/Action/FormCrud.js"],"names":["axios","API","Delete","getAll","Create","Update","deleteData","id","dispatch","delete","baseUrl","then","response","data","result","console","log","type","payload","err","postData","post","updateData","put","getData","get","results"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport API from '../../API/Api';\r\n\r\nexport const Delete ='delete';\r\nexport const getAll = 'getAll';\r\nexport const Create = 'Create';\r\nexport const Update = 'Update';\r\n\r\n\r\nexport const deleteData = (id) => async dispatch => {\r\n    await axios.delete(`${API.baseUrl}/task/lead_58be137bfde045e7a0c8d107783c4598/${id}`)\r\n        .then(response => response.data)\r\n        .then(\r\n            result => {\r\n                console.log(result)\r\n                dispatch({\r\n                    type: Delete,\r\n                    payload: 'Success'\r\n                });                \t                \r\n            },\r\n            err => {             \r\n                dispatch({\r\n                    type: Delete,\r\n                    payload: 'Error'\r\n                });\r\n            }\r\n        );\r\n};\r\n\r\n\r\nexport const postData = (data) => async dispatch => {\r\n    await axios.post(`${API.baseUrl}/task/lead_58be137bfde045e7a0c8d107783c4598`,data)\r\n        .then(response => response.data)\r\n        .then(\r\n            result => {\r\n                console.log(result)\r\n                dispatch({\r\n                    type: Create,\r\n                    payload: 'Success'\r\n                });\r\n                // window.location.reload();\t\t                \r\n            },\r\n            err => {             \r\n                dispatch({\r\n                    type: Create,\r\n                    payload: 'Error'\r\n                });\r\n            }\r\n        );\r\n};\r\n// this module update the ttask\r\nexport const updateData = (data,id) => async dispatch => {\r\n    await axios.put(`${API.baseUrl}/task/lead_58be137bfde045e7a0c8d107783c4598/${id}`,data)\r\n        .then(response => response.data)\r\n        .then(\r\n            result => {\r\n                dispatch({\r\n                    type: Update,\r\n                    payload: 'Success'\r\n                });\r\n                dispatch(getData)\r\n            },\r\n            err => {            \r\n                dispatch({\r\n                    type: Update,\r\n                    payload: 'Error'\r\n                });\r\n            }\r\n        );\r\n};\r\n\r\n// this module handles get all task\r\n\r\nexport const getData= () => async dispatch => {\r\n  \r\n    await axios.get(`${API.baseUrl}/task/lead_58be137bfde045e7a0c8d107783c4598`)\r\n    \r\n        .then(response => response.data)\r\n        .then(\r\n            result => {\r\n                \r\n                    dispatch({\r\n                        type: getAll,\r\n                        payload: result.results\r\n                    });  \r\n                \r\n                \r\n            },\r\n            err => {\r\n                dispatch({\r\n                    type: getAll,\r\n                    payload: []\r\n                });\r\n\r\n            }\r\n        );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}